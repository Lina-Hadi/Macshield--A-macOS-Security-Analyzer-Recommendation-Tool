import subprocess 
from packaging import version # helps compare versions like "13.6.1" 

def check_firewall(): 
    result = subprocess.run( ["/usr/libexec/ApplicationFirewall/socketfilterfw", "--getglobalstate"], capture_output=True, text=True ) 
    return "enabled" in result.stdout.lower() 

def check_gatekeeper():
     result = subprocess.run( ["spctl", "--status"], capture_output=True, text=True ) 
     return "enabled" in result.stdout.lower() 

def check_macos_version(): 
    result = subprocess.run( ["sw_vers"], capture_output=True, text=True ) 
    return result.stdout.strip() 

print("🔐 Checking macOS security...\n") 

#Show macOS version 

print("🖥️ macOS Version Info:")
print(check_macos_version())
print() 

#Firewall check 

if check_firewall(): 
    print("✅ Firewall is ON.")
else: 
    print("❌ Firewall is OFF. Please enable it in System Settings > Security.") 

#Gatekeeper check 

if check_gatekeeper():
     print("✅ Gatekeeper is ON.") 
else:
    print("❌ Gatekeeper is OFF. It's safer to enable it.") 


#To extract the number version 

def get_macos_version_number(): 
    result = subprocess.run(["sw_vers", "-productVersion"], capture_output=True, text=True) 
    return result.stdout.strip() # Example: "13.6.1" 

#At the moment a small list of vulnerable versions: 

vulnerable_versions = { 

    "13.4": ["CVE-2023-32435", "CVE-2023-32439"], 

    "13.5": ["CVE-2023-38606"] 

} 

#To check: 

def check_cve_impact(current_version):
    impacted = vulnerable_versions.get(current_version) 
    if impacted: 
        print(f"⚠️ This version ({current_version}) has known CVEs:") 
        for cve in impacted: 
            print(f" - {cve}") 
    else: 
        print(f"✅ No known CVEs found for version {current_version}") 

 

#Check for missing patches: 

#Set the latest version of mac: ex: “14.4.1”  

latest_version = "14.4.1"

def is_outdated(current, latest): 
    return version.parse(current) < version.parse(latest) 

if is_outdated(get_macos_version_number(), latest_version): 
    print(f"🔴 Your macOS is outdated. Latest version is {latest_version}.") 
else: 
    print("✅ Your macOS is up to date.") 

 